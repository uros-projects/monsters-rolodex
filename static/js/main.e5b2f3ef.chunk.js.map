{"version":3,"sources":["components/Monster/Monster.js","components/Monster/MonsterList.js","components/Monster/SearchBox.js","components/Monster/MonsterMain.js","App.js","index.js"],"names":["Monster","monster","styles","container","display","backgroundColor","border","borderRadius","padding","cursor","backfaceVisibility","transform","transition","img","maxWidth","textAlign","style","alt","src","id","name","email","MonsterList","monsters","width","margin","gridTemplateColumns","gridGap","map","SearchBox","handleSearchChange","placeholder","outline","lineHeight","marginBottom","marginTop","type","onChange","MonsterMain","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","heading","fontFamily","fontSize","color","paddingBottom","e","target","value","App","background","h1","ReactDOM","render","document","getElementById"],"mappings":"uKA4BeA,EA5BC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACTC,EAAS,CACXC,UAAW,CACPC,QAAS,QACTC,gBAAiB,UACjBC,OAAQ,iBACRC,aAAc,MACdC,QAAS,OACTC,OAAQ,UACRC,mBAAoB,SACpBC,UAAW,gBACXC,WAAY,4BAEhBC,IAAK,CACDC,SAAU,QACVC,UAAW,WAInB,OACI,sBAAKC,MAAOd,EAAOC,UAAnB,UACI,qBAAKa,MAAOd,EAAOW,IAAKI,IAAI,UAAUC,IAAG,+BAA0BjB,EAAQkB,GAAlC,4BACzC,mCAAMlB,EAAQmB,KAAd,OACA,kCAAKnB,EAAQoB,MAAb,WCJGC,EAhBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SASnB,OACI,qBAAKP,MATM,CACXQ,MAAO,OACPC,OAAQ,SACRrB,QAAS,OACTsB,oBAAqB,wCACrBC,QAAS,QAIT,SACKJ,EAASK,KAAK,SAAA3B,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQkB,UCS7CU,EAvBG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,mBAAoBC,EAAkB,EAAlBA,YAarC,OACI,uBACIf,MAbO,CACPV,OAAQ,OACR0B,QAAS,OACTxB,QAAS,OACTgB,MAAO,QACPS,WAAY,OACZC,aAAc,OACdC,UAAW,QAOXC,KAAK,SACLL,YAAaA,EACbM,SAAUP,KCmCPQ,EAjDK,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACfhB,EADe,KACLiB,EADK,OAEgBD,mBAAS,IAFzB,mBAEfE,EAFe,KAEFC,EAFE,KAItBC,qBAAW,WACPC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAYQ,QAChC,IAEH,IAWMC,EAAmB1B,EAAS2B,QAAQ,SAAAjD,GACtC,OAAOA,EAAQmB,KAAK+B,cAAcC,SAASX,EAAYU,kBAGrDjD,EAAS,CACXmD,QAAS,CACLC,WAAY,gBACZC,SAAU,OACVC,MAAO,WAEXvD,QAAS,CACLwD,cAAe,SAIvB,OACI,sBAAKzC,MAAOd,EAAOD,QAAnB,UACI,oBAAIe,MAAOd,EAAOmD,QAAlB,gCACA,cAAC,EAAD,CACIvB,mBA9Be,SAAA4B,GACvBhB,EAAegB,EAAEC,OAAOC,QA8BhB7B,YAAY,mBAGhB,cAAC,EAAD,CAAaR,SAAU0B,QC5BpBY,MAlBf,WACE,IAAM3D,EAAS,CACba,UAAW,SACX+C,WAAY,4EACZC,GAAI,CACFD,WAAY,OACZtD,QAAS,SAIb,OACE,sBAAKQ,MAAOd,EAAZ,UACI,oBAAIc,MAAOd,EAAO6D,GAAlB,qBACA,cAAC,EAAD,QCXRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e5b2f3ef.chunk.js","sourcesContent":["const Monster = ({ monster }) => {\r\n    const styles = {\r\n        container: {\r\n            display: 'block',            \r\n            backgroundColor: '#95dada',\r\n            border: '1px solid grey',\r\n            borderRadius: '5px',\r\n            padding: '25px',\r\n            cursor: 'pointer',\r\n            backfaceVisibility: 'hidden',\r\n            transform: 'translateZ(0)',\r\n            transition: 'transform 0.25s ease-out'\r\n        },\r\n        img: {\r\n            maxWidth: '180px',\r\n            textAlign: 'center'\r\n        }\r\n    }    \r\n    \r\n    return (\r\n        <div style={styles.container}>\r\n            <img style={styles.img} alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\r\n            <h1> {monster.name} </h1>\r\n            <p> {monster.email} </p>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Monster\r\n","import React from 'react';\r\nimport Monster from './Monster';\r\n\r\nconst MonsterList = ({ monsters }) => {\r\n    const styles = {\r\n        width: '85vw',\r\n        margin: '0 auto',\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(18rem, auto))',\r\n        gridGap: '20px'\r\n    }\r\n\r\n    return (\r\n        <div style={styles}>\r\n            {monsters.map( monster => <Monster key={monster.id} monster={monster} /> )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MonsterList\r\n","const SearchBox = ({ handleSearchChange, placeholder }) => {\r\n    const styles = {\r\n        container: {\r\n            border: 'none',\r\n            outline: 'none',\r\n            padding: '10px',\r\n            width: '150px',\r\n            lineHeight: '30px',\r\n            marginBottom: '30px',\r\n            marginTop: '30px'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input\r\n            style={styles.container}\r\n            type='search'\r\n            placeholder={placeholder}\r\n            onChange={handleSearchChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { useState, useEffect } from 'react';\r\nimport MonsterList from './MonsterList';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst MonsterMain = () => {\r\n    const [monsters, setMonsters] = useState([])\r\n    const [searchField, setSearchField] = useState('')\r\n\r\n    useEffect( () => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => setMonsters(users))\r\n    }, [])\r\n\r\n    const handleSearchChange = e => {        \r\n        setSearchField(e.target.value)\r\n    }\r\n\r\n    // IMPORTANT: \r\n    // This works automagically because each time a state value changes\r\n    // the component gets re-rendered, and all the code executes again!\r\n    // That way we don't need to keep filteredMonsters in a state variable, \r\n    // and it can be a const, since the value is set once on each render, \r\n    // so there is no re-assignmentÂ of a constant!\r\n    // Avoiding additional state is good practice for optimization\r\n    const filteredMonsters = monsters.filter( monster => {\r\n        return monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n\r\n    const styles = {\r\n        heading: {\r\n            fontFamily: 'Bigelow Rules',\r\n            fontSize: '72px',\r\n            color: '#0ccac4'\r\n        },\r\n        monster: {           \r\n            paddingBottom: '60px'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={styles.monster}>\r\n            <h1 style={styles.heading}> Monsters Rolodex </h1>\r\n            <SearchBox\r\n                handleSearchChange={handleSearchChange}\r\n                placeholder='Search monster'\r\n            />\r\n\r\n            <MonsterList monsters={filteredMonsters} />\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default MonsterMain\r\n","import MonsterMain from './components/Monster/MonsterMain';\n\nfunction App() {\n  const styles = {\n    textAlign: 'center',\n    background: 'linear-gradient(to left, rgba(7, 27, 82, 1) 0%, rgba(0, 128, 128, 1) 100%',\n    h1: {\n      background: 'pink',\n      padding: '1rem',      \n    }\n  }\n\n  return (\n    <div style={styles}>\n        <h1 style={styles.h1}>Project</h1>\n        <MonsterMain  />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}